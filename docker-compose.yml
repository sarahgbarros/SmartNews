version: "3.9"

services:
  backend:
    build:
      context: .
      dockerfile: setup/Dockerfile
    container_name: django_app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  frontend:
    build: ./webapp
    container_name: react_app
    volumes:
      - ./webapp:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true

  celery:
    build:
      context: .
      dockerfile: setup/Dockerfile
    container_name: celery_worker
    command: celery -A setup worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - backend
      - redis

  flower:
    image: mher/flower:latest
    container_name: flower
    command: flower --broker=redis://redis:6379/0 --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery

  db:
    image: postgres:16
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME:-smartnews}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"

  redis:
    image: redis:7-alpine
    container_name: redis_broker
    ports:
      - "6379:6379"

volumes:
  postgres_data:
